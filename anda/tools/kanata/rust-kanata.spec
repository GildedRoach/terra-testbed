# Generated by rust2rpm 27
%bcond check 1

%global crate kanata

Name:           rust-kanata
Version:        1.8.1
Release:        1%?dist
Summary:        Multi-layer keyboard customization

License:        LGPL-3.0-only
URL:            https://crates.io/crates/kanata
Source:         %{crates_source}
# Automatically generated patch to strip dependencies and normalize metadata
Patch:          kanata-fix-metadata-auto.diff
Packager:       madonuko <mado@fyralabs.com>

BuildRequires:  anda-srpm-macros cargo-rpm-macros >= 24

%global _description %{expand:
Multi-layer keyboard customization.}

%description %{_description}

%package     -n %{crate}
Summary:        %{summary}
License:        (0BSD OR MIT OR Apache-2.0) AND Apache-2.0 AND (Apache-2.0 OR BSL-1.0) AND (Apache-2.0 OR MIT) AND (Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT) AND BSD-3-Clause AND BSL-1.0 AND ISC AND LGPL-3.0-only AND MIT AND (MIT OR Apache-2.0) AND (MIT OR Zlib OR Apache-2.0) AND MPL-2.0 AND (Unlicense OR MIT) AND (Zlib OR Apache-2.0 OR MIT)
# LICENSE.dependencies contains a full license breakdown

%description -n %{crate} %{_description}

%files       -n %{crate}
%license LICENSE
%license cfg_samples/tray-icon/license_icons.txt
%license src/gui/win_nwg_ext/license-MIT
%license src/gui/win_nwg_ext/license-nwg-MIT
%license LICENSE.dependencies
%doc README.md
%{_bindir}/kanata

%package        devel
Summary:        %{summary}
BuildArch:      noarch

%description    devel %{_description}

This package contains library source intended for building other packages which
use the "%{crate}" crate.

%files          devel
%license %{crate_instdir}/LICENSE
%license %{crate_instdir}/cfg_samples/tray-icon/license_icons.txt
%license %{crate_instdir}/src/gui/win_nwg_ext/license-MIT
%license %{crate_instdir}/src/gui/win_nwg_ext/license-nwg-MIT
%doc %{crate_instdir}/README.md
%{crate_instdir}/

%package     -n %{name}+default-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+default-devel %{_description}

This package contains library source intended for building other packages which
use the "default" feature of the "%{crate}" crate.

%files       -n %{name}+default-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+cmd-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+cmd-devel %{_description}

This package contains library source intended for building other packages which
use the "cmd" feature of the "%{crate}" crate.

%files       -n %{name}+cmd-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+gui-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+gui-devel %{_description}

This package contains library source intended for building other packages which
use the "gui" feature of the "%{crate}" crate.

%files       -n %{name}+gui-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+indoc-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+indoc-devel %{_description}

This package contains library source intended for building other packages which
use the "indoc" feature of the "%{crate}" crate.

%files       -n %{name}+indoc-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+interception_driver-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+interception_driver-devel %{_description}

This package contains library source intended for building other packages which
use the "interception_driver" feature of the "%{crate}" crate.

%files       -n %{name}+interception_driver-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+open-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+open-devel %{_description}

This package contains library source intended for building other packages which
use the "open" feature of the "%{crate}" crate.

%files       -n %{name}+open-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+passthru_ahk-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+passthru_ahk-devel %{_description}

This package contains library source intended for building other packages which
use the "passthru_ahk" feature of the "%{crate}" crate.

%files       -n %{name}+passthru_ahk-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+perf_logging-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+perf_logging-devel %{_description}

This package contains library source intended for building other packages which
use the "perf_logging" feature of the "%{crate}" crate.

%files       -n %{name}+perf_logging-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+serde_json-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+serde_json-devel %{_description}

This package contains library source intended for building other packages which
use the "serde_json" feature of the "%{crate}" crate.

%files       -n %{name}+serde_json-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+simulated_input-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+simulated_input-devel %{_description}

This package contains library source intended for building other packages which
use the "simulated_input" feature of the "%{crate}" crate.

%files       -n %{name}+simulated_input-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+simulated_output-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+simulated_output-devel %{_description}

This package contains library source intended for building other packages which
use the "simulated_output" feature of the "%{crate}" crate.

%files       -n %{name}+simulated_output-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+tcp_server-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+tcp_server-devel %{_description}

This package contains library source intended for building other packages which
use the "tcp_server" feature of the "%{crate}" crate.

%files       -n %{name}+tcp_server-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+wasm-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+wasm-devel %{_description}

This package contains library source intended for building other packages which
use the "wasm" feature of the "%{crate}" crate.

%files       -n %{name}+wasm-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+win_llhook_read_scancodes-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+win_llhook_read_scancodes-devel %{_description}

This package contains library source intended for building other packages which
use the "win_llhook_read_scancodes" feature of the "%{crate}" crate.

%files       -n %{name}+win_llhook_read_scancodes-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+win_manifest-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+win_manifest-devel %{_description}

This package contains library source intended for building other packages which
use the "win_manifest" feature of the "%{crate}" crate.

%files       -n %{name}+win_manifest-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+win_sendinput_send_scancodes-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+win_sendinput_send_scancodes-devel %{_description}

This package contains library source intended for building other packages which
use the "win_sendinput_send_scancodes" feature of the "%{crate}" crate.

%files       -n %{name}+win_sendinput_send_scancodes-devel
%ghost %{crate_instdir}/Cargo.toml

%package     -n %{name}+zippychord-devel
Summary:        %{summary}
BuildArch:      noarch

%description -n %{name}+zippychord-devel %{_description}

This package contains library source intended for building other packages which
use the "zippychord" feature of the "%{crate}" crate.

%files       -n %{name}+zippychord-devel
%ghost %{crate_instdir}/Cargo.toml

%prep
%autosetup -n %{crate}-%{version} -p1
%cargo_prep_online

%build
%{cargo_license_summary_online}
%{cargo_license_online} > LICENSE.dependencies

%install
%cargo_install

%if %{with check}
%check
%cargo_test
%endif
